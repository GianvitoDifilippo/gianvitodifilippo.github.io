{"version":3,"sources":["webpack:///./src/pages/electronics.tsx","webpack:///./src/components/common/CodeRenderer/CodeRenderer.tsx","webpack:///./src/components/common/CodeRenderer/index.ts","webpack:///./src/components/common/App/index.ts","webpack:///./src/components/UnderConstruction/data.ts","webpack:///./src/components/UnderConstruction/UnderConstruction.tsx","webpack:///./src/components/UnderConstruction/index.ts"],"names":["ElectronicsPage","className","navThresholds","sectionSlugs","CodeRenderer","props","styleLine","bind","line","key","this","specialWords","index1","indexOf","index2","substring","word","index","replace","render","lines","map","activeIndex","React","App","ucLines","ucSpecialWords","UnderConstruction","id","Translate","selector"],"mappings":"4FAAA,gFAeeA,UARS,kBACpB,kBAAC,IAAD,CAAKC,UAAU,cACX,kBAAC,IAAD,CAAQC,cAAe,CAAC,GAAIC,aAAc,KAC1C,kBAAC,IAAD,MACA,kBAAC,IAAD,S,m/BC6DOC,E,YAxDX,WAAYC,GACZ,aACI,cAAMA,IAAN,MAEKC,UAAY,EAAKA,UAAUC,KAAf,gBAHrB,E,4CAMAD,UAAA,SAAUE,GAEN,GAAa,KAATA,EAAa,OAAO,KAExB,IAAK,IAAIC,KAAOC,KAAKL,MAAMM,aAAc,CACrC,GAAY,WAARF,EAeC,CACD,IAAIG,EAASJ,EAAKK,QAAQ,KAC1B,IAAgB,IAAZD,EAAe,SACnB,IAAIE,EAASN,EAAKK,QAAQ,IAAKD,EAAS,GACxC,IAAgB,IAAZE,EAAe,SACnB,OACI,gCACKJ,KAAKJ,UAAUE,EAAKO,UAAU,EAAGH,IAClC,wBAAMX,UAAWQ,GAAMD,EAAKO,UAAUH,EAAQE,EAAS,IACtDJ,KAAKJ,UAAUE,EAAKO,UAAUD,EAAS,KAvBhD,cAAiBJ,KAAKL,MAAMM,aAAaF,MAAzC,aAA+C,KAAtCO,EAAsC,QACvCC,EAAQT,EAAKK,QAAQG,GACzB,IAAe,IAAXC,EAEA,OADAT,EAAOA,EAAKU,QAAQF,EAAM,IAEtB,gCACKN,KAAKJ,UAAUE,EAAKO,UAAU,EAAGE,IAClC,wBAAMhB,UAAWQ,GAAMO,GACtBN,KAAKJ,UAAUE,EAAKO,UAAUE,MAoBvD,OAAO,gCAAGT,I,EAGdW,OAAA,WACA,WACI,OACI,uBAAKlB,UAAU,WACX,sBAAIA,UAAU,6BAA6BS,KAAKL,MAAMe,MAAMC,KAAI,SAACb,EAAMS,GAAP,OAC5D,sBAAIR,IAAKQ,EAAOhB,UAAS,cAAegB,IAAU,EAAKZ,MAAMiB,YAAc,SAAW,KAAO,EAAKhB,UAAUE,U,GAnDrGe,iBCZZnB,O,kCCFf,gBAEeoB,MAAf,G,0ECFaC,EAAU,CACnB,oCACA,eACA,uCACA,0CACA,wEACA,wEACA,gFACA,qBACA,iBACA,SACA,IACA,IACA,qCAGSC,EAA8C,CACvD,OAAU,GACV,QAAW,CACP,QACA,SACA,SACA,WAEJ,UAAa,CACT,KACA,YACA,WACA,QACA,gBAEJ,IAAO,CACH,MACA,KACA,MAEJ,SAAY,CACR,YACA,gBAEJ,YAAe,CACX,IACA,IACA,MCnBOC,G,8BAZW,WACtB,OACI,uBAAKC,GAAG,qBACJ,uBAAK3B,UAAU,aACX,0BAAI,gBAAC4B,EAAA,EAAD,CAAWC,SAAS,0BACxB,0BAAI,gBAACD,EAAA,EAAD,CAAWC,SAAS,0BACxB,gBAAC1B,EAAA,EAAD,CAAcgB,MAAOK,EAASd,aAAce,QChB7CC,O","file":"component---src-pages-electronics-tsx-8632e284922d0e728548.js","sourcesContent":["import React from 'react';\r\n\r\nimport App from '../components/common/App';\r\nimport Footer from '../components/common/Footer';\r\nimport Header from '../components/common/Header';\r\nimport UnderConstruction from '../components/UnderConstruction';\r\n\r\nconst ElectronicsPage = () => (\r\n    <App className=\"error-page\">\r\n        <Header navThresholds={[0]} sectionSlugs={[]}/>\r\n        <UnderConstruction/>\r\n        <Footer/>\r\n    </App>\r\n);\r\n\r\nexport default ElectronicsPage;","import * as React from 'react';\r\n\r\n\r\nimport './coderenderer_desktop.scss';\r\nimport './coderenderer_tablet.scss';\r\nimport './coderenderer_phone.scss';\r\n\r\n\r\ntype PropsType = {\r\n    lines: string[],\r\n    specialWords: { [key: string]: string[] },\r\n    activeIndex?: number\r\n};\r\n\r\nclass CodeRenderer extends React.PureComponent<PropsType>\r\n{\r\n    constructor(props: Readonly<PropsType>)\r\n    {\r\n        super(props);\r\n\r\n        this.styleLine = this.styleLine.bind(this);\r\n    }\r\n\r\n    styleLine(line: string): JSX.Element\r\n    {\r\n        if (line === '') return null;\r\n    \r\n        for (let key in this.props.specialWords) {\r\n            if (key !== 'string') {\r\n                for (let word of this.props.specialWords[key]) {\r\n                    let index = line.indexOf(word);\r\n                    if (index !== -1) {\r\n                        line = line.replace(word, '');\r\n                        return (\r\n                            <>\r\n                                {this.styleLine(line.substring(0, index))}\r\n                                <span className={key}>{word}</span>\r\n                                {this.styleLine(line.substring(index))}\r\n                            </>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let index1 = line.indexOf('\"');\r\n                if (index1 === -1) continue;\r\n                let index2 = line.indexOf('\"', index1 + 1);\r\n                if (index2 === -1) continue;\r\n                return (\r\n                    <>\r\n                        {this.styleLine(line.substring(0, index1))}\r\n                        <span className={key}>{line.substring(index1, index2 + 1)}</span>\r\n                        {this.styleLine(line.substring(index2 + 1))}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        return <>{line}</>;\r\n    }\r\n\r\n    render(): JSX.Element\r\n    {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <ul className=\"code-container has-shadow\">{this.props.lines.map((line, index) => (\r\n                    <li key={index} className={`code-line ${index === this.props.activeIndex ? 'active' : ''}`}>{this.styleLine(line)}</li>\r\n                ))}</ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CodeRenderer;","import CodeRenderer from './CodeRenderer';\r\n\r\nexport default CodeRenderer;","import App from './App';\r\n\r\nexport default App;","export const ucLines = [\r\n    'const UnderConstruction = () => {',\r\n    '    return (',\r\n    '        <div id=\"underconstruction\">',\r\n    '            <div className=\"container\">',\r\n    '                <h1><Translate selector=\"underconstruction:h1\"/></h1>',\r\n    '                <h2><Translate selector=\"underconstruction:h2\"/></h2>',\r\n    '                <CodeRenderer lines={ucLines} specialWords={ucSpecialWords}/>',\r\n    '            </div>',\r\n    '        </div>',\r\n    '    );',\r\n    '}',\r\n    ' ',\r\n    'export default UnderConstruction;'\r\n];\r\n\r\nexport const ucSpecialWords: { [key: string]: string[] } = {\r\n    'string': [],\r\n    'keyword': [\r\n        'const',\r\n        'return',\r\n        'export',\r\n        'default'\r\n    ],\r\n    'attribute': [\r\n        'id',\r\n        'className',\r\n        'selector',\r\n        'lines',\r\n        'specialWords'\r\n    ],\r\n    'tag': [\r\n        'div',\r\n        'h1',\r\n        'h2'\r\n    ],\r\n    'reacttag': [\r\n        'Translate',\r\n        'CodeRenderer'\r\n    ],\r\n    'angbrackets': [\r\n        '<',\r\n        '>',\r\n        '/'\r\n    ]\r\n};","import * as React from 'react';\r\n\r\nimport CodeRenderer from '../common/CodeRenderer';\r\nimport Translate from '../common/Translate';\r\n\r\nimport { ucLines, ucSpecialWords } from './data';\r\n\r\nimport './underconstruction_desktop.scss';\r\nimport './underconstruction_tablet.scss';\r\nimport './underconstruction_phone.scss';\r\n\r\n\r\nconst UnderConstruction = () => {\r\n    return (\r\n        <div id=\"underconstruction\">\r\n            <div className=\"container\">\r\n                <h1><Translate selector=\"underconstruction:h1\"/></h1>\r\n                <h2><Translate selector=\"underconstruction:h2\"/></h2>\r\n                <CodeRenderer lines={ucLines} specialWords={ucSpecialWords}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnderConstruction;","import UnderConstruction from './UnderConstruction';\r\n\r\nexport default UnderConstruction;"],"sourceRoot":""}