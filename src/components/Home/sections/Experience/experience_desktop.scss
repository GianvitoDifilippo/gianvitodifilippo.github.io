$line-thickness: 36px;
$hexagon-size: 144px;
$curve-diameter: 15vw;

@mixin clip-timeline-item($clip-start, $clip-end) {
    -webkit-clip-path: polygon(0% $clip-start, 100% $clip-start, 100% $clip-end, 0% $clip-end);
    clip-path: polygon(0% $clip-start, 100% $clip-start, 100% $clip-end, 0% $clip-end);
}

@mixin clip-top {
    top: calc(50% - #{$curve-diameter / 2} - #{$line-thickness});
    -webkit-clip-path: polygon(0% 50%, 100% 50%, 100% 100%, 0% 100%);
    clip-path: polygon(0% 50%, 100% 50%, 100% 100%, 0% 100%);
}

@mixin clip-bottom {
    top: calc(50% - #{$curve-diameter / 2} - #{$line-thickness});
    -webkit-clip-path: polygon(0% 50%, 100% 50%, 100% 0%, 0% 0%);
    clip-path: polygon(0% 50%, 100% 50%, 100% 0%, 0% 0%);
}

@mixin hexagon-active {
    filter: drop-shadow(0 0 8px var(--color2));
}

#experience {
    overflow-x: hidden;

    .container {
        ul.timeline {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 750px;
            width: fit-content;
            margin: auto;
    
            &::before,
            &::after {
                content: '';
                position: absolute;
                width: calc(100vw - 100%);
                height: $curve-diameter;
                border-radius: $curve-diameter;
                border: $line-thickness solid var(--color2);
                transition: border .2s;
            }

            &::before {
                @include clip-top;
                right: calc(100% - #{$line-thickness / 2});
            }

            &::after {
                left: calc(100% - #{$line-thickness / 2});
            }

            &.odd-nli {
                &::after {
                    @include clip-top;
                }
            }

            &.even-nli {
                &::after {
                    @include clip-bottom;
                }
            }
        
            > li.timeline-item {
                box-sizing: content-box;
                position: relative;
                display: flex;
                justify-content: flex-end;
                align-items: center;
                min-width: 250px;
                max-height: $curve-diameter * 4;
                width: calc(#{$curve-diameter} + #{$line-thickness});
                height: calc(100% - #{$hexagon-size * 0.75});
                margin: 0px #{-$line-thickness / 2};

                h2 {
                    margin: 10px;
                    font-size: 2.3rem;
                }

                div.box {
                    position: relative;
                    width: 150%;
                    background-color: var(--box_color1_opaque);
                    z-index: 2;

                    h1,
                    h3 {
                        white-space: nowrap;
                        text-align: center;
                        width: calc(100% - 2 * 5px);
                        margin: 5px;
                        transition: width 2s;
                    }

                    h1 {
                        font-size: 2.8rem;
                        cursor: pointer;
                    }
    
                    h3 {
                        font-size: 1.6rem;
                        font-weight: 300;

                        > span {
                            text-transform: uppercase;
                            width: 0px;
                            overflow: hidden;
                            display: inline-flex;
                            transition: width .6s linear;
                        }
                    }

                    div {
                        p:not(.descr) {
                            display: none;
                        }

                        p.descr {
                            font-size: 1.5rem;
                            padding: 0px;
                            transition: padding 0s .3s;
                        }
                    }

                    @media (any-hover: hover) {
                        &:hover {
                            &~ .hexagon {
                                @include hexagon-active;
                            }
                        }
                    }
                }
            
                .hexagon {
                    transition: filter .3s;
                    cursor: pointer;
                    
                    > .hexagon-content {
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        -webkit-clip-path: polygon(5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%, 50% 0%);
                        clip-path: polygon(5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%, 50% 0%);
                        width: $hexagon-size;
                        height: $hexagon-size;
                        background-color: var(--color2);
                        transition: background-color .2s;

                        > .hexagon-image {
                            -webkit-clip-path: polygon(5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%, 50% 0%);
                            clip-path: polygon(5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%, 50% 0%);
                            width: 90%;
                            height: 90%;
                        }
                    }

                    @media (any-hover: hover) {
                        &:hover {
                            @include hexagon-active;
                        }
                    }
                }

                &::before {
                    content: '';
                    position: absolute;
                    left: 0;
                    top: 0;
                    width: calc(100% - #{2 * $line-thickness});
                    height: calc(100% - #{2 * $line-thickness});
                    border: $line-thickness solid var(--color2);
                    border-radius: $curve-diameter;
                    transition: border .2s;
                    z-index: -1;
                }

                &:nth-child(2n + 1) {
                    flex-direction: column-reverse;
    
                    .hexagon {
                        margin-top: -#{$hexagon-size / 4 + $line-thickness / 2};
                    }

                    &::before {
                        -webkit-clip-path: polygon(0% 50%, 100% 50%, 100% 0%, 0% 0%);
                        clip-path: polygon(0% 50%, 100% 50%, 100% 0%, 0% 0%);
                    }
                }
                &:nth-child(2n) {
                    flex-direction: column;
        
                    .hexagon {
                        margin-bottom: -#{$hexagon-size / 4 + $line-thickness / 2};
                    }

                    &::before {
                        -webkit-clip-path: polygon(0% 50%, 100% 50%, 100% 100%, 0% 100%);
                        clip-path: polygon(0% 50%, 100% 50%, 100% 100%, 0% 100%);
                    }
                }

                &.active {
                    div.box {
                        h1,
                        h3 {
                            width: 0;
                            transition: width 2.2s;

                            > span {
                                width: 190px;
                                transition: width .6s 1.1s linear;
                            }
                        }
                        div {
                            p.descr {
                                padding: 10px 5px;
                            }
                        }
                    }

                    .hexagon {
                        @include hexagon-active;
                    }
                }
            }
        }
    }

    .cross-fade-leave {
        opacity: 1;
    }

    .cross-fade-leave.cross-fade-leave-active {
        opacity: 0;
        transition: opacity .3s ease-in, padding 0s .3s !important;
    }

    .cross-fade-enter {
        opacity: 0;
    }

    .cross-fade-enter.cross-fade-enter-active {
        opacity: 1;
        transition: opacity .3s ease-in, padding 0s .3s !important;
    }

    .cross-fade-height {
        transition: height .6s ease-in-out;
    }
}